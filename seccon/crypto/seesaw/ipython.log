┌──(daikw㉿kali)-[~/htb/seccon/crypto/seesaw]
└─$ ipython3
Python 3.9.2 (default, Feb 28 2021, 17:03:44) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.20.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: cipher = ['11000010111010000100110001000000010001001011010000000110000100000100011010111110000010100110000
   ...: 0011011101001101001001000100001100010011010001010100000101010001000000010101000100100100010111100011010101
   ...: 10100000010000010111110000010100010100011010010100010001001111001101010011000000101100', '1100011011001000
   ...: 0100110001000000010001001111010010000110110000000110011010101110011010100110000010100110101100000100000000
   ...: 0011100010010010001010000010101010011000000010101010100101100010011100011010101101000001100110100101100110
   ...: 00000100100011010000110010001001011001101010011000001101100', '1100001011001000010011000110100001000100111
   ...: 1001000000110000100000110011000111110010010100110000000101110101101100000000010010110001001101000101010000
   ...: 0101010001000000010001011100000100010011110011010101101000000100110100101100110001000001000110100101000100
   ...: 01001111001101010011000001101100', '1100011011001000110011000010100011000100011100000000011000000000011001
   ...: 1010101110011000100110000010100110101101100100100010000100101001001000101010000010101000100000001010100110
   ...: 0100100010011100011010101100000001100000101101100000000000001000110100101100100010110110011010100010000001
   ...: 11101', '1100011010001000110011000000000001000100011100101000011011010000011001101011111000101010011010001
   ...: 1101110101110100010000000110100001001101000101010000010101001101000001000101000010010001001111001101010110
   ...: 000000010000010111110000000000010000011010010100010001001011001101010011000001111101', '110000101100100011
   ...: 0011000100100001000100001100000010011000000000011001101010111000001010011010001110011010111010001000000010
   ...: 1100101001101000101010000010101001101000001010100010000010001011111001101010110100000110001010010110001010
   ...: 100100000011010010110010001011111001101010011000000101100', '110001101100100001001100011010001100010010110
   ...: 1000010011011000000011001100010111001000010011010000110011010011000000010001000011010100100100010101000001
   ...: 0101001100000001000101110010010001011111001101010110000000010001010110110001010100110000011010000110010001
   ...: 011111001101010011000000101100', '110000101100100001001100001000000100010001110110001001101000000001100110
   ...: 0011111000001010011000000110111010111110010000001011111000100100100010100000101010100110100000100010101000
   ...: 0110001011110001101010110000000110001010011110000010100010100011010010110010000011011001101010001000000111
   ...: 100', '110000101010100001001100010010000100010000110000001001100100000001000110001111100110001001100000011
   ...: 0011010010100001000000001110010100110100010100000101010100110100000101010111001011000100111000110101011000
   ...: 0000010010010110110011000000010100011010000100010001011111001101010001000000101100', '11000010101010001100
   ...: 1100001000000100010011110010100001100000000001000110101011100110001001100000111001101001111001101000000001
   ...: 1000100100100010101000001010100010000000100010110001001000101111000110101011000000011001101001011001101000
   ...: 0000000011010010100010001011011001101010011000001101101', '11000010101010001100110001000000010001001011010
   ...: 0100001100101000001000110001111100110001001100000101001101001110001000000000001001010011010001010100010101
   ...: 0100010000000100010000000011000100111100110101011000000011001101001011000001000010010001101000011001000001
   ...: 1011001101010001000001101100', '11000110101010001100110001000000110001001111001010000110110000000110011010
   ...: 1011100110001001101000011001101011110001001000100111101010010010001010100010101010001010000010001011000001
   ...: 1000101111100110101011010000001001101001111000100000010010001101001010001000000101100110101001100000111110
   ...: 0', '11000110100010001100110001000000010001001011011010100110000000000100011000101110001000100110100001101
   ...: 1101011010001101000100011001010010010001010100000101010001000000010101011000000100010011110011010101101000
   ...: 00110011010010110010000100110100011010010110010001001111001101010011000001101101', '1100011010101000010011
   ...: 0000000000010001001111001010100110100100000100011010111110001000100110100001101110101100000000100000111110
   ...: 0010011010001010000010101010011010000010101001100100100010111100011010101101000001100000100101100010100000
   ...: 10100011010010110010001001011001101010001000000101100', '1100001010101000010011000000000011000100101101101
   ...: 0100110110000000110011000101110010010100110100000100110101111000010000000100100001001001000101000001010101
   ...: 0011000000010001000000000100010111100011010101100000000100110100111100010100000000000110100101000100010010
   ...: 11001101010001000000101101', '1100011010101000110011000100000011000100111101100000011001010000010001100010
   ...: 1110001010100110000001101110101110000100100000101110101001101000101000000010101000100000001010101010000010
   ...: 001011110001101010110000000010000010010110001000100100100011010000100010000001011001101010001000001111101'
   ...: ]
   ...: 

In [2]: cipher[0]
Out[2]: '11000010111010000100110001000000010001001011010000000110000100000100011010111110000010100110000001101110100110100100100010000110001001101000101010000010101000100000001010100010010010001011110001101010110100000010000010111110000010100010100011010010100010001001111001101010011000000101100'

In [3]: eval('1 & 1')
Out[3]: 1

In [4]: from Crypto.Util.number import *

In [5]: 1 | 1 | 0
Out[5]: 1

In [6]: 0 | 1 | 0
Out[6]: 1

In [7]: 0b01 | 0b10
Out[7]: 3

In [8]: '1001'
Out[8]: '1001'

In [9]: 0b'1001'
  File "<ipython-input-9-92f238b69657>", line 1
    0b'1001'
     ^
SyntaxError: invalid binary literal


In [10]: eval('0b' + '1001')
Out[10]: 9

In [11]: cipher = [eval('0b' + rec) for rec in cipher]

In [12]: cipher
Out[12]: 
[189320284534014133582820264973459394175425864612601767295290016332758222574582628692012,
 193084205512758466849722914813111332347476193585490771263187679098220133854098771751020,
 189198870044146582522878557004933588377390774017673335367826615303277724731903636222060,
 193086101289674426293606983937122438980742341630508837414057093708209551491205541728317,
 192843265333358614466757766276376282012403967437132242820026869198565179920086683955325,
 189200765328891944961366707715811629768013896036659218270375326799706081396607602208812,
 193084207857491403515451957707459901373600655609548531387862279325436258216505823801388,
 189198865875521937399177772516168007631992137427018658339985027599875112528880497659964,
 189077451385537773566898751856532284221286036438549659565425964775775878566290839113772,
 189079346207457767595533556115714134362763969763819512804371530752370992741085525389421,
 189079348060076424211959382600071166199464459617843735950941983063301673633326556319852,
 192964685873530678433600532299088576189825831177210443919979731864900740954892342210684,
 192843269038765650483470957985157271741384170854440148768918989432331972964145603883117,
 192962785001645846120828481659808975323927202009305896774432564344192953976591782055980,
 189077447246089405525069384906326420093030721994693227293376360668656499871718818779181,
 192964685873533768904495511352339706052818100258720149359967269890797408493822710976637]

In [13]: from functools import reduce

In [14]: from operator import or_

In [15]: reduce(or_ cipher)
  File "<ipython-input-15-8db17d5d686f>", line 1
    reduce(or_ cipher)
               ^
SyntaxError: invalid syntax


In [16]: reduce(or_, cipher)
Out[16]: 193207521800904323651543349702280376522524937061373133650722113828563074498356571353213

In [17]: reduce(or_, [0b10, 0b01])
Out[17]: 3

In [18]: long_to_bytes(reduce(or_, cipher)).decode("utf-8")
Out[18]: 'ctf4b{Sh3_54w_4_SEESAW,_5h3_54id_50}'


